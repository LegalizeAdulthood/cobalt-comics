
file(GLOB_RECURSE ALL_EXAMPLES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)

find_package(OpenSSL)
find_package(Boost REQUIRED CONFIG COMPONENTS beast callable_traits lockfree outcome)
find_package(boost_cobalt REQUIRED CONFIG)
find_package(boost_json REQUIRED CONFIG)
find_package(boost_signals2 REQUIRED CONFIG)
find_package(boost_url REQUIRED CONFIG)
find_package(OpenSSL REQUIRED)

function(add_boost_cobalt_example NAME)
    cmake_parse_arguments(PARSE_ARGV 1 "EXAMPLE" "" "" "LIBRARIES")
    add_executable(boost_cobalt_example_${NAME} ${NAME}.cpp)
    target_link_libraries(boost_cobalt_example_${NAME} PUBLIC Boost::cobalt ${EXAMPLE_LIBRARIES})
    set_property(TARGET boost_cobalt_example_${NAME} PROPERTY FOLDER "Boost Cobalt Examples")
endfunction()

add_boost_cobalt_example(channel)
add_boost_cobalt_example(delay)
add_boost_cobalt_example(delay_op)
add_boost_cobalt_example(echo_server)
add_boost_cobalt_example(http LIBRARIES Boost::beast OpenSSL::SSL)
add_boost_cobalt_example(outcome LIBRARIES Boost::outcome)
add_boost_cobalt_example(signals LIBRARIES Boost::callable_traits Boost::signals2)
add_boost_cobalt_example(spsc LIBRARIES Boost::lockfree)
add_boost_cobalt_example(thread)
add_boost_cobalt_example(thread_pool)
add_boost_cobalt_example(ticker LIBRARIES Boost::json Boost::url OpenSSL::SSL)
target_compile_options(boost_cobalt_example_ticker PUBLIC $<$<CXX_COMPILER_ID:MSVC>:/bigobj>)
